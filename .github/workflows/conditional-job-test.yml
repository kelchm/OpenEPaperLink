name: FW Build / Test (Conditional Job PoC)

on: [push,pull_request]

jobs:
  determine-builds:
    name: Evaluate Required Builds
    runs-on: ubuntu-20.04
    timeout-minutes: 1
    # Map a step output to a job output
    outputs:
      arm-tag_newton-m3-nrf52811: ${{ needs.determine-builds.outputs.arm-tag_newton-m3-nrf52811 }}
      arm-tag_nrf52811-pio-ap: ${{ needs.determine-builds.outputs.arm-tag_nrf52811-pio-ap }}
      arm-tag_88MZ100: ${{ needs.determine-builds.outputs.arm-tag_88MZ100 }}
      esp32-ap: ${{ needs.determine-builds.outputs.esp32-ap }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          token: ${{ github.token }}
          filters: .github/path-filters.yml

  tag-build-setup:
    uses: ./.github/workflows/setup-pio-environment.yml

  tag-build:
    name: Build Tag FWs
    runs-on: ubuntu-22.04
    needs: [determine-builds, tag-build-setup]
    steps:
      - name: ARM_Tag_FW/Newton_M3_nRF52811
        if: needs.determine-builds.outputs.arm-tag_newton-m3-nrf52811 == 'true'
        run: |
          cd ARM_Tag_FW/Newton_M3_nRF52811
          pio run --environment Newton_M3_Universal

      - name: ARM_Tag_FW/nrf52811_Platformio_AP
        if: needs.determine-builds.outputs.arm-tag_nrf52811-pio-ap == 'true'
        run: |
          cd ARM_Tag_FW/nrf52811_Platformio_AP
          pio run --environment nrf52811_OEPL_AP

      - name: ARM_Tag_FW/nrf52811_Platformio_AP
        if: needs.determine-builds.outputs.arm-tag_88MZ100 == 'true'
        run: |
          echo "POC: this shouldn't run"
          exit 1

  ap-build-setup:
    uses: ./.github/workflows/setup-pio-environment.yml

  ap-build:
    name: Build AP FWs
    runs-on: ubuntu-22.04
    needs: [determine-builds, ap-build-setup]
    steps:
      - name: Build OpenEPaperLink_Mini_AP
        if: needs.determine-builds.outputs.esp32-ap == 'true'
        run: |
          cd ESP32_AP-Flasher
          pio run --environment OpenEPaperLink_Mini_AP
          pio run --target buildfs --environment OpenEPaperLink_Mini_AP

      - name: Build OpenEPaperLink_AP_and_Flasher
        if: needs.determine-builds.outputs.esp32-ap == 'true'
        run: |
          cd ESP32_AP-Flasher
          pio run --environment OpenEPaperLink_AP_and_Flasher
          pio run --target buildfs --environment OpenEPaperLink_AP_and_Flasher

      - name: Build ESP32_S3_16_8_YELLOW_AP
        if: needs.determine-builds.outputs.esp32-ap == 'true'
        run: |
          cd ESP32_AP-Flasher
          pio run --environment ESP32_S3_16_8_YELLOW_AP
          pio run --target buildfs --environment ESP32_S3_16_8_YELLOW_AP

      - name: OpenEPaperLink_Mini_AP_v4
        if: needs.determine-builds.outputs.esp32-ap == 'true'
        run: |
          cd ESP32_AP-Flasher
          pio run --environment OpenEPaperLink_Mini_AP_v4
          pio run --target buildfs --environment OpenEPaperLink_Mini_AP_v4


